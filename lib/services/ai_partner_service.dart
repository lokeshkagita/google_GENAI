import 'dart:convert';
import 'package:http/http.dart' as http;

class AIPartnerService {
  static const String _backendUrl = 'https://moodsync-backend-837735180311.asia-south1.run.app';
  
  AIPartnerService();


  Future<String> getMotivationalMessage({String? context}) async {
    try {
      final response = await http.post(
        Uri.parse('$_backendUrl/api/ai-partner/motivational'),
        headers: {'Content-Type': 'application/json'},
        body: json.encode({'context': context}),
      );
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        return data['response'] ?? "You're doing amazing! I'm so proud of you! ðŸ’•";
      }
    } catch (e) {
      print('Backend error: $e');
    }
    
    // Fallback messages if backend fails
    final fallbackMessages = [
      "You're absolutely incredible! ðŸ’– Keep shining!",
      "I'm so proud of you! ðŸŒŸ You're crushing these goals!",
      "You're doing so well! ðŸ’• I believe in you!",
      "You make me so happy when you take care of yourself! ðŸ˜˜âœ¨",
      "Look at you being all responsible and healthy! ðŸ’ªðŸ’• Love it!",
    ];
    return fallbackMessages[DateTime.now().millisecond % fallbackMessages.length];
  }

  Future<String> getGreetingMessage() async {
    try {
      final response = await http.post(
        Uri.parse('$_backendUrl/api/ai-partner/greeting'),
        headers: {'Content-Type': 'application/json'},
        body: json.encode({}),
      );
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        return data['response'] ?? "Hi there! ðŸ’• Ready to conquer today's wellness missions together?";
      }
    } catch (e) {
      print('Backend error: $e');
    }
    
    return "Hey there! ðŸ’– I'm here to cheer you on with today's wellness goals! Let's do this together! ðŸŒŸ";
  }

  Future<String> getTaskCompletionMessage(String taskName) async {
    try {
      final response = await http.post(
        Uri.parse('$_backendUrl/api/ai-partner/task-completion'),
        headers: {'Content-Type': 'application/json'},
        body: json.encode({'taskName': taskName}),
      );
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        return data['response'] ?? "Yay! You completed $taskName! ðŸŽ‰ I'm so proud of you! ðŸ’•";
      }
    } catch (e) {
      print('Backend error: $e');
    }
    
    return "Amazing job on completing $taskName! ðŸŽ‰ You're absolutely crushing it! ðŸ’–";
  }

  Future<String> getAllTasksCompletedMessage() async {
    try {
      final response = await http.post(
        Uri.parse('$_backendUrl/api/ai-partner/all-tasks-completed'),
        headers: {'Content-Type': 'application/json'},
        body: json.encode({}),
      );
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        return data['response'] ?? "OMG! You did it! All tasks completed! ðŸŽ‰ðŸ’– I'm bursting with pride! You're absolutely amazing! ðŸŒŸ";
      }
    } catch (e) {
      print('Backend error: $e');
    }
    
    return "INCREDIBLE! You completed everything! ðŸŽ‰âœ¨ I'm so incredibly proud of you! You're my wellness champion! ðŸ’–ðŸ‘‘";
  }

  Future<String> getChatResponse(String userMessage) async {
    try {
      final response = await http.post(
        Uri.parse('$_backendUrl/api/ai-partner/chat'),
        headers: {'Content-Type': 'application/json'},
        body: json.encode({'message': userMessage}),
      );
      
      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        return data['response'] ?? "I love talking with you! ðŸ’• How can I support you today?";
      }
    } catch (e) {
      print('Backend error: $e');
    }
    
    return "I'm always here for you! ðŸ’– Tell me more about how you're feeling!";
  }
}